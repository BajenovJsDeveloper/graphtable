{"version":3,"sources":["mockFetch/mockfetch.js","components/DatePicker/DatePicker.jsx","components/FilterButton/FilterButton.jsx","components/SortingIcon/SortingIcon.jsx","components/TableGrid/TableGrid.jsx","components/Lodaing/Loading.jsx","components/Graph.js","index.js"],"names":["SUMM_INTERVAL","dTcount","getLocalDateValue","day","Math","round","random","time","ceil","Date","valueOf","mockdata","senders","this","data","numOfRecords","len","length","i","push","transactionID","date","debitAmount","creditAmount","sender","floor","dateRange","start","end","filter","item","d1","d2","d3","getDate","getMonth","getFullYear","reverse","newDate","dateMothAgo","setMonth","setDate","dateMothAgoValue","dateNowValue","create","fetchMock","get","url","payload","userName","userPassword","filtredData","range","abs","filterByDefault","filterByDate","Promise","resolve","message","status","StaticDatePicker","onSelect","onCancel","useState","startDate","setStartDate","useEffect","onESC","event","keyCode","document","addEventListener","removeEventListener","selected","onChange","dates","selectsRange","inline","useStyles","makeStyles","filterIcon","marginLeft","position","FilterButton","onFilterSort","classes","onFilterReset","isShow","setIsShow","Fragment","IconButton","onClick","disabled","aria-label","className","title","color","DatePicker","SortingIcon","direction","clickSort","name","active","size","sign","table","minWidth","width","tableTH","whiteSpace","fontSize","padding","tableTD","margin","tableBG","backgroundColor","getTimeToString","toLocaleTimeString","TableGrid","props","rowsPageData","handleSorting","onChangePage","onChangePerPage","paginator","id","debit","credit","dirSort","setDirSort","handleLastSorting","fieldName","dir","reversDirArrow","prev","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","toLocaleDateString","TableFooter","TablePagination","rowsPerPageOptions","label","value","colSpan","count","rowsPerPage","perPage","page","SelectProps","inputProps","native","onChangeRowsPerPage","setStyle","loading","display","justifyContent","alignItems","top","left","height","zIndex","icon","Loading","isLoading","Box","URL","creatGraph","itemId","values","ctx","getElementById","getContext","labels","index","chunks","chart","Chart","type","datasets","borderColor","borderWidth","destroy","bind","getPicesOfChart","points","Map","forEach","sum","has","set","entry","sort","a","b","sorting","field","dataList","createPage","partialData","Graph","setData","setRowsPageData","setPaginator","setLoading","showGpaphs","getDataFromServer","mockFetch","then","response","Error","setTimeout","console","log","valuesCredit","valuesDebit","destroyCredit","destroyDebit","fontFamily","p","rows","sortedData","newDataList","sortingByFieldName","newPaginator","e","newPginator","pagesOnPage","Number","target","ReactDOM","render"],"mappings":"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","file":"static/js/main.24bb34e0.chunk.js","sourcesContent":["const USER_NAME = \"Vladimir\";\nconst USER_PASSWORD = \"admin\";\nconst COUNT_OF_RECORDS = 500;\nconst DAY_INTERVAL = 1;\nconst HOURS_PER_DAY = 24;\nconst MINUTES = 0;\nconst YEAR = 2020;\nconst MONTH = 8;\nconst SUMM_INTERVAL = 3000;\nconst DEFAULT_NUM_OF_RECORDS = 10;\nconst MAX_RANGE = 15984000000;\nlet dTcount = 1;\n\n\nfunction getLocalDateValue() {\n  const day = Math.round(Math.random() * DAY_INTERVAL);\n  const time = Math.ceil(Math.random() * HOURS_PER_DAY);\n  dTcount += day;\n  const newDate = new Date(YEAR, MONTH, dTcount, time, MINUTES).valueOf();\n  return newDate;\n}\n\nclass MockData {\n  constructor(senders) {\n    this.data = [];\n    this.senders = senders;\n  }\n\n  create(numOfRecords = DEFAULT_NUM_OF_RECORDS) {\n    const len = this.senders.length;\n    for (let i = 1; i <= numOfRecords; i++) {\n      this.data.push({\n        transactionID: i,\n        date: getLocalDateValue(),\n        debitAmount: Math.round(Math.random() * SUMM_INTERVAL),\n        creditAmount: Math.round(Math.random() * SUMM_INTERVAL),\n        sender: this.senders[Math.floor(Math.random() * len)],\n      });\n    }\n  }\n  getMockData() {\n    return this.data;\n  }\n  filterByDate(dateRange){\n    const start = dateRange.start;\n    const end = dateRange.end;\n    const data = this.data.filter(item => {\n        if(item.date >= start && item.date <= end){\n          return true;\n        }\n        else{\n          const d1 = new Date(item.date);\n          const d2 = new Date(start);\n          const d3 = new Date(end);\n          if((d1.getDate() === d2.getDate() && \n             d1.getMonth() === d2.getMonth() &&\n             d1.getFullYear() === d2.getFullYear()) ||\n\n             (d3.getDate() === d1.getDate() &&\n              d3.getMonth() === d1.getMonth() &&\n              d3.getFullYear() === d1.getFullYear())\n            ) return true;\n        } \n        return false;\n      });\n    return data.reverse();\n  }\n  filterByDefault(){\n    const newDate = new Date();\n    const dateMothAgo = new Date();\n    dateMothAgo.setMonth(newDate.getMonth() - 1);\n    dateMothAgo.setDate(newDate.getDate() - 1);\n    const dateMothAgoValue = dateMothAgo.valueOf();\n    const dateNowValue = newDate.valueOf();\n    const data = this.data.filter(item => {\n        if(item.date >= dateMothAgoValue && item.date<= dateNowValue) return true;\n        return false;\n      });\n    return data.reverse();\n  }\n}\n\nfunction checkValid(range){\n  if(Math.abs(range.start - range.end) > MAX_RANGE) return false;\n  return true;\n}\n\nconst mockdata = new MockData([\n  \"MICB\", \n  \"MAIB\", \n  \"EXB\", \n  \"ECB\", \n  \"VICB\", \n  \"IMPORT-SRL\", \n  \"FORDEXPRESS\",\n  ]);\nmockdata.create(COUNT_OF_RECORDS);\n\nconst fetchMock = {\n  get: (url, payload) => {\n    if (\n      payload.userName === USER_NAME &&\n      payload.userPassword === USER_PASSWORD\n    ) {\n      let filtredData = [];\n      if(payload.dateRange && checkValid(payload.dateRange)){\n        filtredData = mockdata.filterByDate(payload.dateRange);\n      }\n      else{\n        filtredData = mockdata.filterByDefault();\n      }\n      return Promise.resolve({\n        data: filtredData,\n        message: \"auth is ok\",\n        status: \"ok\",\n      });\n    } else {\n      return Promise.resolve({\n        data: [],\n        message: \"User Auth EROR!!\",\n        status: \"error\",\n      });\n    }\n  },\n};\nexport default fetchMock;\n","import React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./datepicker.css\";\n\n\nconst StaticDatePicker = ({onSelect, onCancel}) => {\n  const [startDate, setStartDate] = useState(new Date());\n\n  useEffect(()=>{\n    function onESC(event) {\n      if(event.keyCode === 27){\n        onCancel();\n      }\n    }\n    document.addEventListener('keydown',onESC);\n\n    return () => {document.removeEventListener('keydown',onESC)}\n  },[onCancel]);\n  const onChange = (dates) => {\n    const [start, end] = dates;\n    setStartDate(start);\n    if(start && end){\n      onSelect({start: start.valueOf(), end: end.valueOf()});\n    }\n  };\n  return (\n    <DatePicker\n      selected={startDate}\n      onChange={onChange}\n      startDate={startDate}\n      selectsRange\n      inline\n    />\n  );\n};\n\n\nexport default StaticDatePicker\n","import React, { useState } from \"react\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport DatePicker from \"../DatePicker/DatePicker\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  filterIcon: {\n    marginLeft: 30,\n    position: \"relative\",\n  },\n});\n\nfunction FilterButton({ onFilterSort, onFilterReset }) {\n  const classes = useStyles();\n  const [isShow, setIsShow] = useState(false);\n  const date = new Date();\n  const handleClick = () => {\n\n    setIsShow(true);\n  };\n  const onSelect = (dateRange) => {\n    setIsShow(false);\n    onFilterSort(dateRange);\n  };\n  const onCancel = () => {\n    setIsShow(false);\n  }\n  return (\n    <React.Fragment>\n      <IconButton\n        onClick={handleClick}\n        disabled={false}\n        aria-label=\"Filter\"\n        className={classes.filterIcon}\n        title=\"Filter by date\"\n      >\n        <FilterListIcon color=\"primary\"/>\n      </IconButton>\n      {isShow && (\n        <div className=\"date-picker\">\n           <DatePicker date={date} onSelect={onSelect} onCancel={onCancel}/>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default FilterButton;\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\n\nfunction SortingIcon({ direction, clickSort, name, active }) {\n  let color = active === name ? \"secondary\" : \"disabled\";\n  return (\n    <IconButton\n      onClick={() => clickSort(name)}\n      disabled={false}\n      aria-label=\"Sorting\"\n      size=\"small\"\n    >\n      {direction === \"asc\" ? (\n        <ExpandMoreIcon color={color} />\n      ) : (\n        <ExpandLessIcon color={color} />\n      )}\n    </IconButton>\n  );\n}\n\nexport default SortingIcon;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FilterButton from \"../FilterButton/FilterButton\";\nimport SortingIcon from \"../SortingIcon/SortingIcon\";\nimport \"./style.css\";\n\nconst ALL_PAGES = -1;\nconst PP_1 = 10;\nconst PP_2 = 25;\nconst PP_3 = 50;\nconst PP_4 = 100;\nconst sign = {\n  left: '',\n  right: 'mdl'\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: \"300px\",\n    width: \"100%\",\n  },\n  tableTH: {\n    color: \"#0d218c\",\n    whiteSpace: \"nowrap\",\n    fontSize: \"0.8rem\",\n    padding: \"8px 0\",\n  },\n  tableTD: {\n    color: \"gray\",\n    padding: \"3px\",\n    \"&>p\": {\n      padding: 0,\n      margin: 0,\n\n    },\n    \"&>p:last-child\":{\n      color: \"#c1c1c1\",\n      fontSize: '0.8em'\n    }\n  },\n  tableBG: {\n    backgroundColor: \"#e0e0e0\",\n  },\n});\n\nfunction getDateToString(date){\n  const newDate = new Date(date);\n  return newDate.toLocaleDateString();\n}\nfunction getTimeToString(date){\n  const newDate = new Date(date);\n  return newDate.toLocaleTimeString();\n}\n\n\nexport default function TableGrid(props) {\n  const {\n    rowsPageData,\n    handleSorting,\n    onChangePage,\n    onChangePerPage,\n    onFilterSort,\n    paginator,\n    onFilterReset,\n  } = props;\n\n  const [dirSort, setDirSort] = useState({\n    sender: \"desc\",\n    id: \"asc\",\n    date: \"desc\",\n    debit: \"desc\",\n    credit: \"desc\",\n    active: \"id\",\n  });\n\n  const classes = useStyles();\n\n  const reversDirArrow = (dir) => {\n    return dir === \"asc\" ? \"desc\" : \"asc\";\n  };\n\n  const handleLastSorting = (fieldName) => {\n    let dir = reversDirArrow(dirSort[fieldName]);\n    setDirSort((prev) => ({ ...prev, [fieldName]: dir, active: fieldName }));\n    handleSorting(dir, fieldName, rowsPageData);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead className={classes.tableBG}>\n          <TableRow>\n            <TableCell className={classes.tableTH} align=\"center\" title=\"Sorting by id number\">\n              <SortingIcon\n                active={dirSort.active}\n                name=\"id\"\n                direction={dirSort.id}\n                clickSort={handleLastSorting}\n                title=\"Sorting by id number\"\n              />\n              Transaction ID\n            </TableCell>\n            <TableCell className={classes.tableTH} align=\"left\" title=\"Sorting by date\">\n              <SortingIcon\n                active={dirSort.active}\n                name=\"date\"\n                direction={dirSort.date}\n                clickSort={handleLastSorting}\n              />\n              Date\n            </TableCell>\n            <TableCell className={classes.tableTH} align=\"right\" title=\"Sorting debit\">\n              <SortingIcon\n                active={dirSort.active}\n                name=\"debit\"\n                direction={dirSort.debit}\n                clickSort={handleLastSorting}\n              />\n              Debet Amount\n            </TableCell>\n            <TableCell className={classes.tableTH} align=\"right\" title=\"Sorting by credit\">\n              <SortingIcon\n                active={dirSort.active}\n                name=\"credit\"\n                direction={dirSort.credit}\n                clickSort={handleLastSorting}\n              />\n              Credit Amount\n            </TableCell>\n            <TableCell className={classes.tableTH} align=\"center\" title=\"Sorting by sender\">\n              <SortingIcon\n                active={dirSort.active}\n                name=\"sender\"\n                direction={dirSort.sender}\n                clickSort={handleLastSorting}\n              />\n              Sender\n              <FilterButton\n                onFilterSort={onFilterSort}\n                onFilterReset={onFilterReset}\n              />\n            </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rowsPageData.map((row) => (\n            <TableRow key={row.transactionID}>\n              <TableCell className={classes.tableTD} align=\"center\">\n                {row.transactionID}\n              </TableCell>\n              <TableCell className={classes.tableTD} align=\"left\">\n                <p>{getDateToString(row.date)}</p>\n                <p>{getTimeToString(row.date)}</p>\n              </TableCell>\n              <TableCell className={classes.tableTD} align=\"right\">\n                {`${sign.left} ${row.debitAmount} ${sign.right}`}\n              </TableCell>\n              <TableCell className={classes.tableTD} align=\"right\">\n                {`${sign.left} ${row.creditAmount} ${sign.right}`}\n              </TableCell>\n              <TableCell className={classes.tableTD} align=\"center\">\n                {row.sender}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[\n                PP_1,\n                PP_2,\n                PP_3,\n                PP_4,\n                { label: \"All\", value: ALL_PAGES },\n              ]}\n              colSpan={5}\n              count={paginator.count}\n              rowsPerPage={\n                paginator.perPage \n              }\n              page={paginator.page}\n              SelectProps={{\n                inputProps: { \"aria-label\": \"Records per page\" },\n                native: true,\n              }}\n              onChangePage={onChangePage}\n              onChangeRowsPerPage={onChangePerPage}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport Box from \"@material-ui/core/Box\";\nimport \"./loading.css\";\n\nconst setStyle = makeStyles({\n  loading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    backgroundColor: \"rgba(0,0,0,0.2)\",\n    zIndex: 200,\n  },\n  icon: {\n    fontSize: \"3rem\",\n  },\n});\n\nexport default function Loading({ isLoading }) {\n  const classes = setStyle();\n  if (!isLoading) return null;\n  return (\n    <Box className={classes.loading}>\n      <HourglassEmptyIcon id=\"load\" />\n    </Box>\n  );\n}\n","import Chart from \"chart.js\";\nimport { useEffect, useState } from \"react\";\nimport mockFetch from \"../mockFetch/mockfetch.js\";\nimport TableGrid from \"./TableGrid/TableGrid\";\nimport Box from \"@material-ui/core/Box\";\nimport Loading from \"./Lodaing/Loading\";\nimport \"./graph.css\";\n\nconst URL = \"https://graphs.com\";\nconst USER_NAME = \"Vladimir\";\nconst USER_PASSWORD = \"admin\";\nconst DEBIT = 0;\nconst CREDIT = 1;\nconst DEBIT_AMOUNT_FIELD = \"debitAmount\";\nconst CREDIT_AMOUNT_FIELD = \"creditAmount\";\nconst DEFAULT_PAGE = 0;\nconst DEFAULT_PER_PAGE = 10;\nconst SERVER_DELAY_TIME = 1000;\nconst ZERO = 0;\nconst SENDER = 0;\nconst FIELD_VALUE = 1;\nconst ALL_PAGES = -1;\n\nfunction creatGraph(itemId, values) {\n  const ctx = document.getElementById(itemId).getContext(\"2d\");\n  const labels = values.map((i, index) => i[SENDER]);\n  const chunks =  values.map((i, index) => i[FIELD_VALUE]);\n  const chart = new Chart(ctx, {\n    type: \"pie\",\n    data: {\n      labels: labels,\n      datasets: [\n        {\n          data: chunks,\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.7)\",\n            \"rgba(54, 162, 235, 0.7)\",\n            \"rgba(255, 206, 86, 0.7)\",\n            \"rgba(75, 192, 192, 0.7)\",\n            \"rgba(153, 102, 255, 0.7)\",\n            \"rgba(255, 159, 64, 0.7)\",\n          ],\n          borderColor: \"gray\",\n          borderWidth: 1,\n        },\n      ],\n    },\n  });\n  return chart.destroy.bind(chart);\n}\n\nfunction getPicesOfChart(data, fieldName) {\n  const points = [];\n  const name = fieldName === DEBIT ? DEBIT_AMOUNT_FIELD : CREDIT_AMOUNT_FIELD;\n  const map = new Map();\n  data.forEach(i => {\n    let sum = 0;\n    if(map.has(i.sender)){\n      sum = map.get(i.sender) + i[name];\n      map.set(i.sender, sum);\n    }\n    else{\n      map.set(i.sender, i[name]);\n    }\n  });\n  for(let entry of map){\n    points.push(entry);\n  }\n  points.sort((a,b) => {\n    if(a[SENDER] > b[SENDER]) return 1;\n    if(a[SENDER] < b[SENDER]) return -1;\n    return 0;\n  })\n\n  return points;\n}\n\nfunction sorting(dir, field, dataList) {\n  const NEGATIVE_SENSE = -1;\n  const POZITIVE_SENSE = 1;\n  const sign = dir === \"desc\" ? POZITIVE_SENSE : NEGATIVE_SENSE;\n  return dataList.sort((a, b) => {\n    if (a[field] > b[field]) return 1 * sign;\n    if (a[field] < b[field]) return -1 * sign;\n    else return ZERO;\n  });\n}\n\nfunction sortingByFieldName(dir, fieldName, rowsPageData) {\n  const newDataList = [...rowsPageData];\n  switch (fieldName) {\n    case \"id\": {\n      sorting(dir, \"transactionID\", newDataList);\n      break;\n    }\n    case \"sender\": {\n      sorting(dir, \"sender\", newDataList);\n      break;\n    }\n    case \"date\": {\n      sorting(dir, \"date\", newDataList);\n      break;\n    }\n    case \"credit\": {\n      sorting(dir, \"creditAmount\", newDataList);\n      break;\n    }\n    case \"debit\": {\n      sorting(dir, \"debitAmount\", newDataList);\n      break;\n    }\n    default: {\n      sorting(dir, \"transactionID\", newDataList);\n    }\n  }\n  return newDataList;\n}\n\nfunction defaultPagination() {\n  return { \n    page: DEFAULT_PAGE, \n    perPage: DEFAULT_PER_PAGE, \n    count: ZERO };\n}\n\nfunction createPage(dataList, paginator,){\n  let partialData = [];\n  let len = dataList.length;\n  let start, count;\n  let perPage = paginator.perPage;\n  let page = paginator.page\n\n  if (perPage === DEFAULT_PAGE) {\n    perPage = DEFAULT_PER_PAGE;\n    page = DEFAULT_PAGE;\n  }\n  if (perPage >= len) page = DEFAULT_PAGE;\n  if (perPage === ALL_PAGES) perPage = len;\n  start = page * perPage;\n  count = len >= start + perPage ? start + perPage : len;\n  for (let i = start; i < count; i++) {\n    partialData.push(dataList[i]);\n  }\n  perPage = paginator.perPage !== ALL_PAGES ? perPage : paginator.perPage;\n  return partialData;\n}\n\nfunction Graph() {\n  const [dataList, setData] = useState([])\n  const [rowsPageData, setRowsPageData] = useState([]);\n  const [paginator, setPaginator] = useState(() => defaultPagination());\n  const [isLoading, setLoading] = useState(false);\n  const showGpaphs = dataList.length > 0 ? true : false;\n\n  const onFilterSort = (dateRange) => {\n    getDataFromServer(URL, dateRange, paginator.perPage,);\n  };\n  const onFilterReset = () => {\n  };\n\n  const handleSorting = (dir, fieldName, rows) => {\n    const sortedData = sortingByFieldName(dir, fieldName, dataList);\n    setData(sortedData);\n    const newPaginator = { ...paginator, page: 0 }\n    setRowsPageData(createPage(sortedData, newPaginator));\n  };\n\n  const onChangePage = (e, page) => {\n    const newPginator = { ...paginator, page };\n    setRowsPageData(createPage(dataList, newPginator));\n    setPaginator(newPginator);\n  };\n\n  const onChangePerPage = (perPage) => {\n    const pagesOnPage = Number(perPage.target.value);\n    const newPginator = { ...paginator, page: 0, perPage: pagesOnPage };\n    setRowsPageData(createPage(dataList, newPginator));\n    setPaginator(newPginator);\n  };\n\n  const getDataFromServer = (url, dateRange, perPage) => {\n    const payload = {\n      userName: USER_NAME,\n      userPassword: USER_PASSWORD,\n    };\n    if(dateRange) payload.dateRange = dateRange;\n    setLoading(true);\n    mockFetch.get(url, payload).then((response) => {\n      if (response.status === \"ok\") {\n        setTimeout(() => {\n          setData(response.data);\n          setPaginator((prev) => ({\n            ...prev,\n            page: 0,\n            count: response.data.length,\n            perPage: prev.perPage,\n          }));\n          setLoading(false);\n          console.log(\"from server: \", response);\n        }, SERVER_DELAY_TIME);\n      } else {\n        throw new Error(\"Something is wrong!!! \" + response.message);\n      }\n    });\n  };\n\n  useEffect(()=>{\n    if(dataList.length > 0){\n      setRowsPageData(createPage(dataList, paginator));\n    }\n  },[dataList])\n\n  useEffect(() => {\n    getDataFromServer(URL);\n  }, []);\n\n  useEffect(() => {\n    if (dataList.length > ZERO) {\n      const valuesCredit = getPicesOfChart(dataList, DEBIT);\n      const valuesDebit = getPicesOfChart(dataList, CREDIT);\n      const destroyCredit = creatGraph(\"chart-credit\", valuesCredit);\n      const destroyDebit = creatGraph(\"chart-debit\", valuesDebit);\n      return () => {\n        destroyDebit();\n        destroyCredit();\n      };\n    }\n  }, [dataList]);\n\n  return (\n    <div className=\"App\">\n      <Loading isLoading={isLoading} />\n      {showGpaphs && \n        <Box\n          className=\"App__graph-container\"\n          fontFamily=\"Roboto\"\n          fontSize={20}\n          p={1}>\n          <Box className=\"App__graphic\">\n            Debit Amount\n            <canvas id=\"chart-credit\"></canvas>\n          </Box>\n          <Box className=\"App__graphic\">\n            Credit Amount\n            <canvas id=\"chart-debit\"></canvas>\n          </Box>\n        </Box>\n      }\n      <Box className=\"App__table\">\n        <TableGrid\n          rowsPageData={rowsPageData}\n          onFilterSort={onFilterSort}\n          paginator={paginator}\n          handleSorting={handleSorting}\n          onChangePage={onChangePage}\n          onChangePerPage={onChangePerPage}\n          onFilterReset={onFilterReset}\n        />\n      </Box>\n    </div>\n  );\n}\n\nexport default Graph;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Graph from \"./components/Graph.js\";\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<Graph />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}