{"version":3,"sources":["mockFetch/mockfetch.js","components/DatePicker/DatePicker.jsx","components/FilterButton/FilterButton.jsx","components/SortingIcon/SortingIcon.jsx","components/TableGrid/TableGrid.jsx","components/Lodaing/Loading.jsx","components/Graph.js","index.js"],"names":["SUMM_INTERVAL","dTcount","getLocalDateValue","day","Math","round","random","time","ceil","Date","valueOf","mockdata","senders","this","data","message","numOfRecords","len","length","i","debitAmount","creditAmount","tranzaction","push","transactionID","date","sender","floor","msg","dateRange","resetMessage","start","end","filter","item","d1","d2","d3","getDate","getMonth","getFullYear","reverse","newDate","dateMothAgo","setMonth","setDate","dateMothAgoValue","dateNowValue","chunkData","console","log","splice","setMessage","range","abs","create","fetchMock","get","url","payload","userName","userPassword","filtredData","checkValid","determinateSize","filterByDate","filterByDefault","Promise","resolve","status","dataMsg","getMessage","StaticDatePicker","onSelect","onCancel","useState","startDate","setStartDate","useEffect","onESC","event","keyCode","document","addEventListener","removeEventListener","selected","onChange","dates","selectsRange","inline","useStyles","makeStyles","filterIcon","marginLeft","position","FilterButton","onFilterSort","classes","isShow","setIsShow","Fragment","IconButton","onClick","disabled","aria-label","className","title","color","DatePicker","SortingIcon","direction","clickSort","name","active","size","sign","left","right","table","minWidth","width","tableTH","whiteSpace","fontSize","padding","tableTD","margin","paddingRight","tableBG","backgroundColor","getTimeToString","toLocaleTimeString","TableGrid","props","rowsPageData","handleSorting","onChangePage","onChangePerPage","paginator","id","debit","credit","dirSort","setDirSort","toNumberWithPrfix","str","Number","toUpperCase","dateValueToString","dateValue","toLocaleDateString","toNumberSpacedString","num","numFormated","toFixed","split","fix","float","map","digit","idx","join","handleLastSorting","fieldName","dir","reversDirArrow","prev","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","colSpan","align","Box","p","TableBody","row","TableFooter","TablePagination","rowsPerPageOptions","label","value","count","rowsPerPage","perPage","page","SelectProps","inputProps","native","onChangeRowsPerPage","setStyle","loading","display","justifyContent","alignItems","top","height","zIndex","icon","Loading","isLoading","URL","creatGraph","itemId","values","ctx","getElementById","getContext","labels","index","chunks","chart","Chart","type","datasets","borderColor","borderWidth","destroy","bind","getPicesOfChart","points","Map","forEach","sum","has","parseFloat","set","entry","sort","a","b","sorting","field","dataList","createPage","partialData","Graph","setData","setRowsPageData","setPaginator","setLoading","setDateRange","showGpaphs","getDataFromServer","mockFetch","then","response","Error","setTimeout","valuesCredit","valuesDebit","destroyCredit","destroyDebit","fontFamily","rows","sortedData","newDataList","sortingByFieldName","newPaginator","e","newPginator","pagesOnPage","target","ReactDOM","render"],"mappings":"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","file":"static/js/main.a2c8dd3d.chunk.js","sourcesContent":["const USER_NAME = \"Vladimir\";\nconst USER_PASSWORD = \"admin\";\nconst COUNT_OF_RECORDS = 1000;\nconst DAY_INTERVAL = 1;\nconst HOURS_PER_DAY = 24;\nconst MINUTES = 0;\nconst YEAR = 2020;\nconst MONTH = 8;\nconst SUMM_INTERVAL = 100.00;\nconst DEFAULT_NUM_OF_RECORDS = 10;\nconst MAX_RANGE = 15984000000;\nconst START = 0;\nlet dTcount = 1;\n\n\nfunction getLocalDateValue() {\n  const day = Math.round(Math.random() * DAY_INTERVAL);\n  const time = Math.ceil(Math.random() * HOURS_PER_DAY);\n  dTcount += day;\n  const newDate = new Date(YEAR, MONTH, dTcount, time, MINUTES).valueOf();\n  return newDate;\n}\n\nclass MockData {\n  constructor(senders) {\n    this.data = [];\n    this.senders = senders;\n    this.message = '';\n  }\n\n  create(numOfRecords = DEFAULT_NUM_OF_RECORDS) {\n    const len = this.senders.length;\n    for (let i = 1; i <= numOfRecords; i++) {\n      const debitAmount = (Math.random() * SUMM_INTERVAL);\n      const creditAmount = (Math.random() * SUMM_INTERVAL);\n      const tranzaction = Math.round(Math.random()*1);\n      this.data.push({\n        transactionID: i,\n        date: getLocalDateValue(),\n        debitAmount: tranzaction === 0 ? debitAmount : 0,\n        creditAmount: tranzaction === 1 ? creditAmount : 0,\n        sender: this.senders[Math.floor(Math.random() * len)],\n      });\n    }\n  }\n  getMockData() {\n    return this.data;\n  }\n  setMessage(msg){\n    this.message = msg;\n  }\n  resetMessage(){\n    this.message = '';\n  }\n  getMessage(){\n    return this.message;\n  }\n  filterByDate(dateRange){\n    this.resetMessage();\n    const start = dateRange.start;\n    const end = dateRange.end;\n    const data = this.data.filter(item => {\n        if(item.date >= start && item.date <= end){\n          return true;\n        }\n        else{\n          const d1 = new Date(item.date);\n          const d2 = new Date(start);\n          const d3 = new Date(end);\n          if((d1.getDate() === d2.getDate() && \n             d1.getMonth() === d2.getMonth() &&\n             d1.getFullYear() === d2.getFullYear()) ||\n\n             (d3.getDate() === d1.getDate() &&\n              d3.getMonth() === d1.getMonth() &&\n              d3.getFullYear() === d1.getFullYear())\n            ) return true;\n        } \n        return false;\n      });\n    return data.reverse();\n  }\n  filterByDefault(){\n    this.resetMessage();\n    const newDate = new Date();\n    const dateMothAgo = new Date();\n    dateMothAgo.setMonth(newDate.getMonth() - 1);\n    dateMothAgo.setDate(newDate.getDate() - 1);\n    const dateMothAgoValue = dateMothAgo.valueOf();\n    const dateNowValue = newDate.valueOf();\n    const data = this.data.filter(item => {\n        if(item.date >= dateMothAgoValue && item.date<= dateNowValue) return true;\n        return false;\n      });\n    return data.reverse();\n  }\n  determinateSize(data){\n    const chunkData = [...data];\n    console.log('Length ',chunkData.length)\n    if(data.length > 200){\n      chunkData.splice(200);\n      this.setMessage('Too more data.')\n    }\n    return chunkData;\n  }\n  checkValid(range){\n    if(Math.abs(range.start - range.end) > MAX_RANGE) return false;\n    return true;\n  }\n\n}\n\nconst mockdata = new MockData([\n  \"MICB\", \n  \"MAIB\", \n  \"EXB\", \n  \"ECB\", \n  \"VICB\", \n  \"IMPORT-SRL\", \n  \"FORDEXPRESS\",\n  ]);\n\nmockdata.create(COUNT_OF_RECORDS);\n\nconst fetchMock = {\n  get: (url, payload) => {\n    if (\n      payload.userName === USER_NAME &&\n      payload.userPassword === USER_PASSWORD)\n      {\n        let filtredData = [];\n        let start;\n        let end;\n        if(payload.dateRange && mockdata.checkValid(payload.dateRange)){\n          filtredData = mockdata.determinateSize(mockdata.filterByDate(payload.dateRange));\n          // start = payload.dateRange.start;\n        }\n        else{\n          filtredData = mockdata.determinateSize(mockdata.filterByDefault());\n          end = filtredData[START].date;\n          start = filtredData[filtredData.length - 1].date;\n        }\n        \n        return Promise.resolve({\n          data: filtredData,\n          message: \"auth is ok\",\n          status: \"ok\",\n          range: {start, end},\n          dataMsg: mockdata.getMessage(),\n        });\n      } \n      else {\n        return Promise.resolve({\n          data: [],\n          message: \"User Auth EROR!!\",\n          status: \"error\",\n          dataMsg: mockdata.getMessage(),\n        });\n      }\n  },\n};\nexport default fetchMock;\n","import React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./datepicker.css\";\n\n\nconst StaticDatePicker = ({onSelect, onCancel}) => {\n  const [startDate, setStartDate] = useState(new Date());\n\n  useEffect(()=>{\n    function onESC(event) {\n      if(event.keyCode === 27){\n        onCancel();\n      }\n    }\n    document.addEventListener('keydown',onESC);\n\n    return () => {document.removeEventListener('keydown',onESC)}\n  },[onCancel]);\n  const onChange = (dates) => {\n    const [start, end] = dates;\n    setStartDate(start);\n    if(start && end){\n      onSelect({start: start.valueOf(), end: end.valueOf()});\n    }\n  };\n  return (\n    <DatePicker\n      selected={startDate}\n      onChange={onChange}\n      startDate={startDate}\n      selectsRange\n      inline\n    />\n  );\n};\n\n\nexport default StaticDatePicker\n","import React, { useState } from \"react\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport DatePicker from \"../DatePicker/DatePicker\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  filterIcon: {\n    marginLeft: 30,\n    position: \"relative\",\n  },\n});\n\nfunction FilterButton({ onFilterSort }) {\n  const classes = useStyles();\n  const [isShow, setIsShow] = useState(false);\n  const date = new Date();\n  const handleClick = () => {\n\n    setIsShow(true);\n  };\n  const onSelect = (dateRange) => {\n    setIsShow(false);\n    onFilterSort(dateRange);\n  };\n  const onCancel = () => {\n    setIsShow(false);\n  }\n  return (\n    <React.Fragment>\n      <IconButton\n        onClick={handleClick}\n        disabled={false}\n        aria-label=\"Filter\"\n        className={classes.filterIcon}\n        title=\"Filter by date\"\n      >\n        <FilterListIcon color=\"primary\"/>\n      </IconButton>\n      {isShow && (\n        <div className=\"date-picker\">\n           <DatePicker date={date} onSelect={onSelect} onCancel={onCancel}/>\n        </div>\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default FilterButton;\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\n\nfunction SortingIcon({ direction, clickSort, name, active }) {\n  let color = active === name ? \"secondary\" : \"disabled\";\n  return (\n    <IconButton\n      onClick={() => clickSort(name)}\n      disabled={false}\n      aria-label=\"Sorting\"\n      size=\"small\"\n    >\n      {direction === \"asc\" ? (\n        <ExpandMoreIcon color={color} />\n      ) : (\n        <ExpandLessIcon color={color} />\n      )}\n    </IconButton>\n  );\n}\n\nexport default SortingIcon;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useState } from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nimport FilterButton from \"../FilterButton/FilterButton\";\nimport SortingIcon from \"../SortingIcon/SortingIcon\";\nimport Box from \"@material-ui/core/Box\";\nimport \"./style.css\";\n\nconst ALL_PAGES = -1;\nconst PP_1 = 10;\nconst PP_2 = 25;\nconst PP_3 = 50;\nconst PP_4 = 100;\nconst sign = {\n  left: '',\n  right: 'mdl'\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: \"300px\",\n    width: \"100%\",\n  },\n  tableTH: {\n    color: \"#0d218c\",\n    whiteSpace: \"nowrap\",\n    fontSize: \"0.8rem\",\n    padding: \"8px 0\",\n  },\n  tableTD: {\n    color: \"gray\",\n    padding: \"3px\",\n    \"&>p\": {\n      padding: 0,\n      margin: 0,\n    },\n    \"&:first-child\": {\n      paddingRight: 30,\n    },\n    \"&:nth-child(2)\": {\n      width: 100,\n    },\n    \"&>p:last-child\":{\n      color: \"#c1c1c1\",\n      fontSize: '0.8em'\n    }\n  },\n  tableBG: {\n    backgroundColor: \"#e0e0e0\",\n  },\n});\n\nfunction getDateToString(date){\n  const newDate = new Date(date);\n  return newDate.toLocaleDateString();\n}\nfunction getTimeToString(date){\n  const newDate = new Date(date);\n  return newDate.toLocaleTimeString();\n}\n\n\nexport default function TableGrid(props) {\n  const {\n    rowsPageData,\n    handleSorting,\n    onChangePage,\n    onChangePerPage,\n    onFilterSort,\n    paginator,\n    dateRange,\n  } = props;\n\n  const [dirSort, setDirSort] = useState({\n    sender: \"desc\",\n    id: \"asc\",\n    date: \"desc\",\n    debit: \"desc\",\n    credit: \"desc\",\n    active: \"id\",\n  });\n\n  const classes = useStyles();\n\n  const reversDirArrow = (dir) => {\n    return dir === \"asc\" ? \"desc\" : \"asc\";\n  };\n\n  const toNumberWithPrfix = (str, sign) => {\n    if(Number(str) > 0)\n      return `${sign.left.toUpperCase()} ${str} ${sign.right.toUpperCase()}`;\n    else\n      return '-';\n  }\n\n  const dateValueToString = (dateValue) => {\n    return new Date(dateValue).toLocaleDateString();\n  }\n\n  const toNumberSpacedString = (num) => {\n    let numFormated = num.toFixed(2).split('.');\n    let fix = numFormated[0].split('').reverse();\n    let float = numFormated[1];\n    fix = fix\n      .map((digit, idx) => (idx%3 === 0 && idx > 0)? `${digit} ` : digit);\n    fix = fix.reverse().join('');\n    numFormated[0] = fix;\n    numFormated[1] = float;\n    return numFormated.join('.');\n  }\n\n  const handleLastSorting = (fieldName) => {\n    let dir = reversDirArrow(dirSort[fieldName]);\n    setDirSort((prev) => ({ ...prev, [fieldName]: dir, active: fieldName }));\n    handleSorting(dir, fieldName, rowsPageData);\n  };\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead className={classes.tableBG}>\n          <TableRow>\n            <TableCell  colSpan={2} className={classes.tableTH} align=\"right\" title=\"Filter\">\n              <Box className=\"filter\">\n                <FilterButton onFilterSort={onFilterSort}/>\n                <Box className=\"date__container\">\n                  <div className=\"date__label\">Date range:</div>\n                  <div className=\"date__range\">\n                    {`${dateValueToString(dateRange.start)} - ${dateValueToString(dateRange.end)}`}\n                  </div>\n                </Box>\n              </Box>\n            </TableCell>\n            <TableCell p={2} colSpan={3} className={classes.tableTH} align=\"left\">\n              \n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell className={classes.tableTH} align=\"center\" title=\"Sorting by id number\">\n              <SortingIcon\n                active={dirSort.active}\n                name=\"id\"\n                direction={dirSort.id}\n                clickSort={handleLastSorting}\n                title=\"Sorting by id number\"\n              />Transaction ID\n            </TableCell>\n            <TableCell className={classes.tableTH} align=\"center\" title=\"Sorting by date\">\n              <SortingIcon\n                active={dirSort.active}\n                name=\"date\"\n                direction={dirSort.date}\n                clickSort={handleLastSorting}\n              />Date\n            </TableCell>\n            <TableCell className={classes.tableTH} align=\"right\" title=\"Sorting debit\">\n              <SortingIcon\n                active={dirSort.active}\n                name=\"debit\"\n                direction={dirSort.debit}\n                clickSort={handleLastSorting}\n              />Debet Amount\n            </TableCell>\n            <TableCell className={classes.tableTH} align=\"right\" title=\"Sorting by credit\">\n              <SortingIcon\n                active={dirSort.active}\n                name=\"credit\"\n                direction={dirSort.credit}\n                clickSort={handleLastSorting}\n              />Credit Amount\n            </TableCell>\n            <TableCell className={classes.tableTH} align=\"center\" title=\"Sorting by sender\">\n              <SortingIcon\n                active={dirSort.active}\n                name=\"sender\"\n                direction={dirSort.sender}\n                clickSort={handleLastSorting}\n              />Sender\n            </TableCell>\n          </TableRow>\n          \n        </TableHead>\n        <TableBody>\n          {rowsPageData.map((row) => (\n            <TableRow key={row.transactionID}>\n              <TableCell className={classes.tableTD} align=\"right\">\n                {row.transactionID}\n              </TableCell>\n              <TableCell className={classes.tableTD} align=\"right\">\n                <p>{getDateToString(row.date)}</p>\n                <p>{getTimeToString(row.date)}</p>\n              </TableCell>\n              <TableCell className={classes.tableTD} align=\"right\">\n                {toNumberWithPrfix(toNumberSpacedString(row.debitAmount), sign)}\n              </TableCell>\n              <TableCell className={classes.tableTD} align=\"right\">\n                {toNumberWithPrfix(toNumberSpacedString(row.creditAmount), sign)}\n              </TableCell>\n              <TableCell className={classes.tableTD} align=\"center\">\n                {row.sender}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[\n                PP_1,\n                PP_2,\n                PP_3,\n                PP_4,\n                { label: \"All\", value: ALL_PAGES },\n              ]}\n              colSpan={5}\n              count={paginator.count}\n              rowsPerPage={paginator.perPage}\n              page={paginator.page}\n              SelectProps={{\n                inputProps: { \"aria-label\": \"Records per page\" },\n                native: true,\n              }}\n              onChangePage={onChangePage}\n              onChangeRowsPerPage={onChangePerPage}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport HourglassEmptyIcon from \"@material-ui/icons/HourglassEmpty\";\nimport Box from \"@material-ui/core/Box\";\nimport \"./loading.css\";\n\nconst setStyle = makeStyles({\n  loading: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    backgroundColor: \"rgba(0,0,0,0.2)\",\n    zIndex: 200,\n  },\n  icon: {\n    fontSize: \"3rem\",\n  },\n});\n\nexport default function Loading({ isLoading }) {\n  const classes = setStyle();\n  if (!isLoading) return null;\n  return (\n    <Box className={classes.loading}>\n      <HourglassEmptyIcon id=\"load\" />\n    </Box>\n  );\n}\n","import Chart from \"chart.js\";\nimport { useEffect, useState } from \"react\";\nimport mockFetch from \"../mockFetch/mockfetch.js\";\nimport TableGrid from \"./TableGrid/TableGrid\";\nimport Box from \"@material-ui/core/Box\";\nimport Loading from \"./Lodaing/Loading\";\nimport \"./graph.css\";\n\nconst URL = \"https://graphs.com\";\nconst USER_NAME = \"Vladimir\";\nconst USER_PASSWORD = \"admin\";\nconst DEBIT = 0;\nconst CREDIT = 1;\nconst DEBIT_AMOUNT_FIELD = \"debitAmount\";\nconst CREDIT_AMOUNT_FIELD = \"creditAmount\";\nconst DEFAULT_PAGE = 0;\nconst DEFAULT_PER_PAGE = 10;\nconst SERVER_DELAY_TIME = 1000;\nconst ZERO = 0;\nconst SENDER = 0;\nconst FIELD_VALUE = 1;\nconst ALL_PAGES = -1;\n\nfunction creatGraph(itemId, values) {\n  const ctx = document.getElementById(itemId).getContext(\"2d\");\n  const labels = values.map((i, index) => i[SENDER]);\n  const chunks =  values.map((i, index) => i[FIELD_VALUE]);\n  const chart = new Chart(ctx, {\n    type: \"pie\",\n    data: {\n      labels: labels,\n      datasets: [\n        {\n          data: chunks,\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.7)\",\n            \"rgba(54, 162, 235, 0.7)\",\n            \"rgba(255, 206, 86, 0.7)\",\n            \"rgba(75, 192, 192, 0.7)\",\n            \"rgba(153, 102, 255, 0.7)\",\n            \"rgba(255, 159, 64, 0.7)\",\n          ],\n          borderColor: \"gray\",\n          borderWidth: 1,\n        },\n      ],\n    },\n  });\n  return chart.destroy.bind(chart);\n}\n\nfunction getPicesOfChart(data, fieldName) {\n  const NUMBER = 1;\n  const points = [];\n  const name = fieldName === DEBIT ? DEBIT_AMOUNT_FIELD : CREDIT_AMOUNT_FIELD;\n  const map = new Map();\n  data.forEach(item => {\n    let sum = 0.00;\n    if(map.has(item.sender)){\n      sum = map.get(item.sender) + Number.parseFloat(item[name]);\n      map.set(item.sender, sum);\n    }\n    else{\n      map.set(item.sender, item[name]);\n    }\n  });\n  for(let entry of map){\n    entry[NUMBER] = entry[NUMBER].toFixed(2);\n    points.push(entry);\n  }\n  points.sort((a,b) => {\n    if(a[SENDER] > b[SENDER]) return 1;\n    if(a[SENDER] < b[SENDER]) return -1;\n    return 0;\n  })\n  console.log(points);\n  return points;\n}\n\nfunction sorting(dir, field, dataList) {\n  const NEGATIVE_SENSE = -1;\n  const POZITIVE_SENSE = 1;\n  const sign = dir === \"desc\" ? POZITIVE_SENSE : NEGATIVE_SENSE;\n  return dataList.sort((a, b) => {\n    if (a[field] > b[field]) return 1 * sign;\n    if (a[field] < b[field]) return -1 * sign;\n    else return ZERO;\n  });\n}\n\nfunction sortingByFieldName(dir, fieldName, rowsPageData) {\n  const newDataList = [...rowsPageData];\n  switch (fieldName) {\n    case \"id\": {\n      sorting(dir, \"transactionID\", newDataList);\n      break;\n    }\n    case \"sender\": {\n      sorting(dir, \"sender\", newDataList);\n      break;\n    }\n    case \"date\": {\n      sorting(dir, \"date\", newDataList);\n      break;\n    }\n    case \"credit\": {\n      sorting(dir, \"creditAmount\", newDataList);\n      break;\n    }\n    case \"debit\": {\n      sorting(dir, \"debitAmount\", newDataList);\n      break;\n    }\n    default: {\n      sorting(dir, \"transactionID\", newDataList);\n    }\n  }\n  return newDataList;\n}\n\nfunction defaultPagination() {\n  return { \n    page: DEFAULT_PAGE, \n    perPage: DEFAULT_PER_PAGE, \n    count: ZERO };\n}\n\nfunction createPage(dataList, paginator,){\n  let partialData = [];\n  let len = dataList.length;\n  let start, count;\n  let perPage = paginator.perPage;\n  let page = paginator.page\n\n  if (perPage === DEFAULT_PAGE) {\n    perPage = DEFAULT_PER_PAGE;\n    page = DEFAULT_PAGE;\n  }\n  if (perPage >= len) page = DEFAULT_PAGE;\n  if (perPage === ALL_PAGES) perPage = len;\n  start = page * perPage;\n  count = len >= start + perPage ? start + perPage : len;\n  for (let i = start; i < count; i++) {\n    partialData.push(dataList[i]);\n  }\n  perPage = paginator.perPage !== ALL_PAGES ? perPage : paginator.perPage;\n  return partialData;\n}\n\nfunction Graph() {\n  const [dataList, setData] = useState([])\n  const [rowsPageData, setRowsPageData] = useState([]);\n  const [paginator, setPaginator] = useState(() => defaultPagination());\n  const [isLoading, setLoading] = useState(false);\n  const [dateRange, setDateRange] = useState({start: new Date().toLocaleDateString(), end: new Date().toLocaleDateString()});\n  const showGpaphs = dataList.length > 0 ? true : false;\n\n  const onFilterSort = (range) => {\n    getDataFromServer(URL, range);\n  };\n  \n  const handleSorting = (dir, fieldName, rows) => {\n    const sortedData = sortingByFieldName(dir, fieldName, dataList);\n    setData(sortedData);\n    const newPaginator = { ...paginator, page: 0 }\n    setRowsPageData(createPage(sortedData, newPaginator));\n  };\n\n  const onChangePage = (e, page) => {\n    const newPginator = { ...paginator, page };\n    setRowsPageData(createPage(dataList, newPginator));\n    setPaginator(newPginator);\n  };\n\n  const onChangePerPage = (perPage) => {\n    const pagesOnPage = Number(perPage.target.value);\n    const newPginator = { ...paginator, page: 0, perPage: pagesOnPage };\n    setRowsPageData(createPage(dataList, newPginator));\n    setPaginator(newPginator);\n  };\n\n  const getDataFromServer = (url, range) => {\n    const payload = {\n      userName: USER_NAME,\n      userPassword: USER_PASSWORD,\n    };\n    if(range) payload.dateRange = range;\n    setLoading(true);\n    mockFetch.get(url, payload).then((response) => {\n      if (response.status === \"ok\") {\n        setTimeout(() => {\n          setData(response.data);\n          setPaginator((prev) => ({\n            ...prev,\n            page: 0,\n            count: response.data.length,\n            perPage: prev.perPage,\n          }));\n          setLoading(false);\n          console.log(\"from server: \", response, range);\n          if(range) \n            setDateRange(range);\n          else if(response.range) \n            setDateRange(response.range);\n        }, SERVER_DELAY_TIME);\n      } else {\n        throw new Error(\"Something is wrong!!! \" + response.message);\n      }\n    });\n  };\n\n  useEffect(()=>{\n    if(dataList.length > 0){\n      setRowsPageData(createPage(dataList, paginator));\n    }\n  },[dataList])\n\n  useEffect(() => {\n    getDataFromServer(URL);\n  }, []);\n\n  useEffect(() => {\n    if (dataList.length > ZERO) {\n      const valuesCredit = getPicesOfChart(dataList, DEBIT);\n      const valuesDebit = getPicesOfChart(dataList, CREDIT);\n      const destroyCredit = creatGraph(\"chart-credit\", valuesCredit);\n      const destroyDebit = creatGraph(\"chart-debit\", valuesDebit);\n      return () => {\n        destroyDebit();\n        destroyCredit();\n      };\n    }\n  }, [dateRange]);\n\n  return (\n    <div className=\"App\">\n      <Loading isLoading={isLoading} />\n      {showGpaphs && \n        <Box\n          className=\"App__graph-container\"\n          fontFamily=\"Roboto\"\n          fontSize={20}\n          p={1}>\n          <Box className=\"App__graphic\">\n            Debit Amount\n            <canvas id=\"chart-credit\"></canvas>\n          </Box>\n          <Box className=\"App__graphic\">\n            Credit Amount\n            <canvas id=\"chart-debit\"></canvas>\n          </Box>\n        </Box>\n      }\n      <Box className=\"App__table\">\n        <TableGrid\n          rowsPageData={rowsPageData}\n          onFilterSort={onFilterSort}\n          paginator={paginator}\n          handleSorting={handleSorting}\n          onChangePage={onChangePage}\n          onChangePerPage={onChangePerPage}\n          dateRange={dateRange}\n        />\n      </Box>\n    </div>\n  );\n}\n\nexport default Graph;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Graph from \"./components/Graph.js\";\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<Graph />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}